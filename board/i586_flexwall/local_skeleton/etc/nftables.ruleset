flush ruleset

table firewall {
  chain incoming {
    type filter hook input priority 0;

    # established/related connections
    ct state established,related accept

    # invalid connections
    ct state invalid drop

    ip saddr 10.10.10.0/24 ct state new accept

    # loopback interface
    iifname lo accept

    # icmp
    #icmp type echo-request accept

    # open tcp ports: sshd (22), httpd (80)
    #tcp dport {ssh, http} accept
    # avoid brute force on ssh:
    #tcp dport ssh limit rate 15/minute accept

    iifname eth1 udp sport domain accept
    iifname eth1 tcp sport domain accept
    iifname eth1 udp sport bootpc limit rate 12/minute accept # DHCP
#    {udp, tcp} ip saddr 127.0.0.1 sport ntp dport ntp accept # NTP

    # log drops
    counter log drop

    # bad tcp -> avoid network scanning:
    tcp flags & (fin|syn) == (fin|syn)				drop
    tcp flags & (syn|rst) == (syn|rst)				drop
    tcp flags & (fin|syn|rst|psh|ack|urg) < (fin)		drop # == 0 would be better, not supported yet.
    tcp flags & (fin|syn|rst|psh|ack|urg) == (fin|psh|urg)	drop

    # no ping floods:
    ip protocol icmp limit rate 10/second accept
    ip protocol icmp drop

    # everything else
    drop
  }
  chain outgoing {
    type filter hook output priority 0;
    ct state established accept
    ct state related accept
    oif lo accept
    ct state new counter accept
  }
}

table ip nat {
  chain postrouting {
    type nat hook postrouting priority 0;
    oifname "eth0" ip saddr 10.10.10.0/24 masquerade random,persistent
  }
  chain prerouting {
    type nat hook prerouting priority 0;
  }
}
